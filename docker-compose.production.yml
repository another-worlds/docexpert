version: '3.8'

services:
  telegram-bot:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: telegram-bot-prod
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - XAI_API_KEY=${XAI_API_KEY}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_DB_NAME=${MONGODB_DB_NAME}
      - EMBEDDING_SERVICE=${EMBEDDING_SERVICE:-huggingface}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOGS_DIR=/app/logs
      - PYTHONPATH=/app
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
      - telegram_bot_data:/app/data
    env_file:
      - .env
    networks:
      - telegram-bot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"

  # Reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: telegram-bot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - telegram-bot
    networks:
      - telegram-bot-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # Optional: Log aggregation
  fluentd:
    build: ./fluentd
    container_name: telegram-bot-fluentd
    volumes:
      - logs_data:/fluentd/log
      - ./fluentd/conf:/fluentd/etc
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - telegram-bot-network
    depends_on:
      - telegram-bot

volumes:
  uploads_data:
    driver: local
  logs_data:
    driver: local
  telegram_bot_data:
    driver: local

networks:
  telegram-bot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
